{"mappings":"ACEA,IAAM,EAAe,UACf,EAAW,QAEX,EAAmB,SAAC,CAAA,CAAS,CAAnC,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,OAElC,EAAG,YAAY,CAAC,UAAW,gBAE3B,EAAG,SAAS,CAAC,GAAG,CAAC,GAEjB,EAAG,WAAW,CAAG,EAEjB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEM,EAAO,SAAS,aAAa,CAAC,QAE9B,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,6BACV,GAEA,WAAW,WAGT,EAFY,AAAI,MAAM,8BAGxB,EAAG,IACL,GAEM,EAAoB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAhD,EACE,EAAK,gBAAgB,CAAC,cAAe,WACnC,GACF,EACF,GAEM,EAAmB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA/C,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,QAAQ,IAAI,CAAC,CAAC,EAAmB,EAAiB,EAC/C,IAAI,CAAC,WAAM,OAAA,EAAQ,8B,EACxB,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,QAAQ,GAAG,CAAC,CAAC,EAAkB,EAAkB,EAC9C,IAAI,CAAC,WAAM,OAAA,EAAQ,6B,EACxB,GAEA,EACG,IAAI,CAAC,SAAA,CADR,EAEI,EAAiB,EAAQ,EAC3B,GACC,KAAK,CAAC,SAAA,CADP,EAEE,EAAiB,EAAQ,EAC3B,GAEF,EACG,IAAI,CAAC,SAAA,CADR,EAEI,EAAiB,EAAQ,EAC3B,GACC,KAAK,CAAC,SAAA,CADP,EAEE,EAAiB,EAAQ,EAC3B,GAEF,EACG,IAAI,CAAC,SAAA,CADR,EAEI,EAAiB,EAAQ,EAC3B,GACC,KAAK,CAAC,SAAA,CADP,EAEE,EAAiB,EAAQ,EAC3B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar successClass = \"success\";\nvar errClass = \"error\";\nvar showNotification = function(message, className) {\n    var el = document.createElement(\"div\");\n    el.setAttribute(\"data-qa\", \"notification\");\n    el.classList.add(className);\n    el.textContent = message;\n    document.body.append(el);\n};\nvar body = document.querySelector(\"body\");\nvar promise1 = new Promise(function(resolve, reject) {\n    body.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        var err = new Error(\"First promise was rejected\");\n        reject(err);\n    }, 3000);\n});\nvar promiseRightClick = new Promise(function(resolve, reject) {\n    body.addEventListener(\"contextmenu\", function() {\n        resolve();\n    });\n});\nvar promiseLeftClick = new Promise(function(resolve, reject) {\n    body.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    Promise.race([\n        promiseRightClick,\n        promiseLeftClick\n    ]).then(function() {\n        return resolve(\"Second promise was resolved\");\n    });\n});\nvar promise3 = new Promise(function(resolve, reject) {\n    Promise.all([\n        promiseLeftClick,\n        promiseRightClick\n    ]).then(function() {\n        return resolve(\"Third promise was resolved\");\n    });\n});\npromise1.then(function(result) {\n    showNotification(result, successClass);\n}).catch(function(result) {\n    showNotification(result, errClass);\n});\npromise2.then(function(result) {\n    showNotification(result, successClass);\n}).catch(function(result) {\n    showNotification(result, errClass);\n});\npromise3.then(function(result) {\n    showNotification(result, successClass);\n}).catch(function(result) {\n    showNotification(result, errClass);\n});\n\n//# sourceMappingURL=index.39547cbf.js.map\n","'use strict';\n\nconst successClass = 'success';\nconst errClass = 'error';\n\nconst showNotification = (message, className) => {\n  const el = document.createElement('div');\n\n  el.setAttribute('data-qa', 'notification');\n\n  el.classList.add(className);\n\n  el.textContent = message;\n\n  document.body.append(el);\n};\n\nconst body = document.querySelector('body');\n\nconst promise1 = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    const err = new Error('First promise was rejected');\n\n    reject(err);\n  }, 3000);\n});\n\nconst promiseRightClick = new Promise((resolve, reject) => {\n  body.addEventListener('contextmenu', () => {\n    resolve();\n  });\n});\n\nconst promiseLeftClick = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  Promise.race([promiseRightClick, promiseLeftClick])\n    .then(() => resolve('Second promise was resolved'));\n});\n\nconst promise3 = new Promise((resolve, reject) => {\n  Promise.all([promiseLeftClick, promiseRightClick])\n    .then(() => resolve('Third promise was resolved'));\n});\n\npromise1\n  .then(result => {\n    showNotification(result, successClass);\n  })\n  .catch(result => {\n    showNotification(result, errClass);\n  });\n\npromise2\n  .then(result => {\n    showNotification(result, successClass);\n  })\n  .catch(result => {\n    showNotification(result, errClass);\n  });\n\npromise3\n  .then(result => {\n    showNotification(result, successClass);\n  })\n  .catch(result => {\n    showNotification(result, errClass);\n  });\n"],"names":["successClass","errClass","showNotification","message","className","el","document","createElement","setAttribute","classList","add","textContent","body","append","querySelector","promise1","Promise","resolve","reject","addEventListener","setTimeout","Error","promiseRightClick","promiseLeftClick","promise2","race","then","promise3","all","result","catch"],"version":3,"file":"index.39547cbf.js.map"}